name: CI-CD-main-PR
on: 
  pull_request:
    branches: [ "main" ]
    
permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results
  actions: write

jobs: 

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code  
        uses: actions/checkout@v3
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #LINTER_RULES_PATH: /
          JAVA_FILE_NAME: checkstyle-config.xml
          VALIDATE_MARKDOWN: false
          VALIDATE_YAML: false
          
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code  
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - name: Test app   
        env: 
          JASYPT_ENCRYPTOR_PWD_DIST: ${{ secrets.JASYPT_ENCRYPTOR_PWD_DIST }}
        run: mvn -Pcoverage-prod test
        
  analysis_sonarcloud:
    needs: test
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JASYPT_ENCRYPTOR_PWD_DIST: ${{ secrets.JASYPT_ENCRYPTOR_PWD_DIST }}
        run: mvn -Pcoverage-prod verify sonar:sonar "-Dsonar.host.url=https://sonarcloud.io" -Dsonar.organization=sylvainjanet -Dsonar.projectKey=SylvainJanet_sampleJavaApp -Dsonar.java.source=1.8
            
  check_analysis_sonarcloud:
    needs: analysis_sonarcloud
    name: Check Quality Gate SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Make request
      id: httpRequest
      uses: fjogeleit/http-request-action@v1
      with:
        #url: 'https://sonarcloud.io/api/qualitygates/project_status?projectKey=SylvainJanet_sampleJavaApp&branch=dev'
        url: "${{ format('https://sonarcloud.io/api/qualitygates/project_status?projectKey=SylvainJanet_sampleJavaApp&branch={0}', github.head_ref) }}"
        method: 'GET'
    - name: Show Response
      run: |
        echo ${{ steps.httpRequest.outputs.response }}
        
    - name: Check
      if: ${{ fromJson(steps.httpRequest.outputs.response).projectStatus.status != 'OK' }} 
      uses: actions/github-script@v3
      with:
        script: |
            core.setFailed('Quality gate failed')
          
  analyse_QL:
    name: Analyze CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
  
  build:
    needs: [lint, analyse_QL, check_analysis_sonarcloud]
    runs-on: ubuntu-latest
    permissions: # The Dependency Submission API requires write permission
      contents: write
    steps:
    - name: Checkout source code  
      uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven 
      env: 
        JASYPT_ENCRYPTOR_PWD_DIST: ${{ secrets.JASYPT_ENCRYPTOR_PWD_DIST }}
      run: mvn -Pprod -B install

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
     
    - name: Inject slug/short variables  
      uses: rlespinasse/github-slug-action@v4
    - name: Upload artifact  
      uses: actions/upload-artifact@v3  
      with:  
        name: sample-java-app-${{ env.GITHUB_REF_SLUG }}-${{ github.run_id }}-${{ github.run_number }}  
        path: ./target
        
